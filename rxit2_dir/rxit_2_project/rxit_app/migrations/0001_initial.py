# Generated by Django 2.1.4 on 2019-02-04 16:10

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('participant_name', models.CharField(default='', max_length=200)),
                ('participant_type', models.CharField(default='', max_length=200)),
                ('participant_index', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dispenser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotation', models.CharField(blank=True, default='', max_length=100)),
                ('username', models.CharField(blank=True, default='', max_length=100)),
                ('stats_notes', models.CharField(blank=True, default='', max_length=300)),
                ('review_notes', models.CharField(blank=True, default='', max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='DxAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_freq', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('daily_rx_messages', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('pc_urgent_messages', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('total_time_messages', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('comm_role', models.CharField(choices=[('AD', 'Office admin'), ('AS', 'Assistant'), ('RN', 'Nurse'), ('MD', 'Physician'), ('OT', 'Other')], default='AD', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='DxDelivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method_del', models.BooleanField(default=False)),
                ('fraction_del', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='DxDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participant_name', models.CharField(blank=True, default='', max_length=100)),
                ('street', models.CharField(blank=True, default='', max_length=100)),
                ('city', models.CharField(blank=True, default='', max_length=100)),
                ('province', models.CharField(blank=True, default='', max_length=100)),
                ('medical_record_system', models.CharField(blank=True, default='', max_length=100)),
                ('num_physicians', models.DecimalField(decimal_places=1, default=0, max_digits=3)),
                ('practice_type', models.CharField(choices=[('FH', 'FHT/FHN/FHO'), ('GP', 'Group'), ('SL', 'Solo')], default='SL', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='DxPrep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dx_freq', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('dx_duration', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('within_emr', models.BooleanField(default=False)),
                ('linked_to_emr', models.BooleanField(default=False)),
                ('desktop', models.BooleanField(default=False)),
                ('mobile_app', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DxSpec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spec_duration', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('by_hand', models.BooleanField(default=False)),
                ('free_text', models.BooleanField(default=False)),
                ('drop_down', models.BooleanField(default=False)),
                ('check_box', models.BooleanField(default=False)),
                ('search', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DxStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_daily', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('num_weekly', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='Numbers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_pharmacists', models.DecimalField(decimal_places=1, default=0, max_digits=3)),
                ('num_reg_tech', models.DecimalField(decimal_places=1, default=0, max_digits=3)),
                ('num_unreg', models.DecimalField(decimal_places=1, default=0, max_digits=3)),
                ('num_am', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='Prescriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stats_notes', models.CharField(blank=True, default='', max_length=100)),
                ('username', models.CharField(blank=True, default='', max_length=100)),
                ('deliver_notes', models.CharField(blank=True, default='', max_length=100)),
                ('authorize_msg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorize_msg', to='rxit_app.DxStats')),
                ('auto_renew_rx', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auto_renew_rx', to='rxit_app.DxStats')),
                ('cds', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cds', to='rxit_app.DxPrep')),
                ('clarify_msg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clarify_msg', to='rxit_app.DxStats')),
                ('description', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='rxit_app.DxDescription')),
                ('dosage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dosage', to='rxit_app.DxSpec')),
                ('drug_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drug_name', to='rxit_app.DxSpec')),
                ('e_prescribe_rx', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='e_prescribe_rx', to='rxit_app.DxDelivery')),
                ('extend_pts', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extend_pts', to='rxit_app.DxStats')),
                ('faxed_rx', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faxed_rx', to='rxit_app.DxDelivery')),
                ('instructions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructions', to='rxit_app.DxSpec')),
                ('new_rx', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_rx', to='rxit_app.DxStats')),
                ('ongoing_pts', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ongoing_pts', to='rxit_app.DxStats')),
                ('p_dis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='p_dis', to='rxit_app.DxPrep')),
                ('p_formulary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='p_formulary', to='rxit_app.DxPrep')),
                ('pat_hx', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pat_hx', to='rxit_app.DxPrep')),
                ('phoned_rx', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phoned_rx', to='rxit_app.DxDelivery')),
                ('poly_rx', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poly_rx', to='rxit_app.DxStats')),
                ('printed_rx', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='printed_rx', to='rxit_app.DxDelivery')),
                ('process_msg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='process_msg', to='rxit_app.DxAdmin')),
                ('receive_msg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receive_msg', to='rxit_app.DxAdmin')),
                ('refills', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refills', to='rxit_app.DxSpec')),
                ('renew_rx', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='renew_rx', to='rxit_app.DxStats')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route', to='rxit_app.DxSpec')),
                ('std_pts', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='std_pts', to='rxit_app.DxStats')),
                ('total_pts', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='total_pts', to='rxit_app.DxStats')),
                ('total_rx', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='total_rx', to='rxit_app.DxStats')),
            ],
        ),
        migrations.CreateModel(
            name='RxComm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_duration', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('daily_freq', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('daily_elapsed', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('by_fax', models.BooleanField(default=False)),
                ('by_phone', models.BooleanField(default=False)),
                ('by_dm', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RxDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participant_name', models.CharField(blank=True, default='', max_length=100)),
                ('street', models.CharField(blank=True, default='', max_length=100)),
                ('city', models.CharField(blank=True, default='', max_length=100)),
                ('province', models.CharField(blank=True, default='', max_length=100)),
                ('corporate_type', models.CharField(blank=True, default='', max_length=100)),
                ('pharmacy_mgt_system', models.CharField(blank=True, default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='RxProcess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_new_pt', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('num_new_rx', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('num_rpt_rx', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('pharm_ip', models.BooleanField(default=False)),
                ('reg_ip', models.BooleanField(default=False)),
                ('unreg_ip', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RxReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('before_rx', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('after_rx', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='RxStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_am', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('num_pm', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('num_evng', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('num_wend', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('stats_notes', models.CharField(blank=True, default='', max_length=300)),
            ],
        ),
        migrations.AddField(
            model_name='dispenser',
            name='comm_advise',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comm_advise', to='rxit_app.RxComm'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='comm_cancel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comm_cancel', to='rxit_app.RxComm'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='comm_consult',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comm_consult', to='rxit_app.RxComm'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='comm_dose',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comm_dose', to='rxit_app.RxComm'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='comm_illegible',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comm_illegible', to='rxit_app.RxComm'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='comm_incomplete',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comm_incomplete', to='rxit_app.RxComm'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='comm_renewal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comm_renewal', to='rxit_app.RxComm'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='description',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='rxit_app.RxDescription'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='e_prescribe_rx',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='e_prescribe_rx', to='rxit_app.RxStats'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='faxed_rx',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faxed_rx', to='rxit_app.RxStats'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='numbers',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='rxit_app.Numbers'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='phoned_rx',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phoned_rx', to='rxit_app.RxStats'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='review_new_pt',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_new_pt', to='rxit_app.RxReview'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='review_new_rx',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_new_rx', to='rxit_app.RxReview'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='review_rpt_rx',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_rpt_pt', to='rxit_app.RxReview'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='rx_process',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='rxit_app.RxProcess'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='total_rx',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='total_rx', to='rxit_app.RxStats'),
        ),
        migrations.AddField(
            model_name='dispenser',
            name='walkin_rx',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='walkin_rx', to='rxit_app.RxStats'),
        ),
    ]
